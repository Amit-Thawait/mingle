<?xml version="1.0" encoding="UTF-8"?>
<!--
Copyright 2020 ThoughtWorks, Inc.

This program is free software: you can redistribute it and/or modify
it under the terms of the GNU Affero General Public License as
published by the Free Software Foundation, either version 3 of the
License, or (at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Affero General Public License for more details.

You should have received a copy of the GNU Affero General Public License
along with this program.  If not, see <https://www.gnu.org/licenses/agpl-3.0.txt>.
-->
<project name="module_secret" default="compile.module.secret">
    <dirname property="module.secret.basedir" file="${ant.file.module_secret}"/>

    <property name="module.jdk.home.secret" value="${project.jdk.home}"/>
    <property name="module.jdk.bin.secret" value="${project.jdk.bin}"/>
    <property name="module.jdk.classpath.secret" value="${project.jdk.classpath}"/>

    <property name="compiler.args.secret" value="${compiler.args}"/>

    <property name="secret.output.dir" value="${module.secret.basedir}/../../tmp/classes/production/secret"/>
    <property name="secret.testoutput.dir" value="${module.secret.basedir}/../../tmp/classes/test/secret"/>

    <path id="secret.module.bootclasspath">
        <!-- Paths to be included in compilation bootclasspath -->
    </path>

    <path id="secret.module.classpath">
        <fileset dir="${module.secret.basedir}/../../vendor/java" includes="**/*.jar"/>
        <fileset dir="${module.secret.basedir}/../../development/build_java" includes="**/*.jar"/>
        <pathelement location="${start.output.dir}"/>
    </path>


    <path id="secret.runtime.module.classpath">
        <fileset dir="${module.secret.basedir}/../../vendor/java" includes="**/*.jar"/>
        <fileset dir="${module.secret.basedir}/../../development/build_java" includes="**/*.jar"/>
        <pathelement location="${start.output.dir}"/>
        <pathelement location="${secret.output.dir}"/>
        <pathelement location="${secret.testoutput.dir}"/>
    </path>


    <patternset id="excluded.from.module.secret">
        <patternset refid="ignored.files"/>
    </patternset>

    <patternset id="excluded.from.compilation.secret">
        <patternset refid="excluded.from.module.secret"/>
    </patternset>

    <path id="secret.module.sourcepath">
        <dirset dir="${module.secret.basedir}">
            <include name="src"/>
        </dirset>
    </path>


    <target name="compile.module.secret" depends="compile.module.secret.production,compile.module.secret.tests"
            description="Compile module secret"/>

    <target name="compile.module.secret.production" depends="compile.module.start.production" description="Compile module secret; production classes">
        <mkdir dir="${secret.output.dir}"/>
        <javac source="1.5" target="1.5" destdir="${secret.output.dir}" debug="${compiler.debug}"
               nowarn="${compiler.generate.no.warnings}" memorymaximumsize="${compiler.max.memory}" fork="true">
            <compilerarg line="${compiler.args.secret}"/>
            <bootclasspath refid="secret.module.bootclasspath"/>
            <classpath refid="secret.module.classpath"/>
            <src refid="secret.module.sourcepath"/>
            <patternset refid="excluded.from.compilation.secret"/>
        </javac>

        <copy todir="${secret.output.dir}">
            <fileset dir="${module.secret.basedir}/src">
                <patternset refid="compiler.resources"/>
                <type type="file"/>
            </fileset>
        </copy>
    </target>

    <target name="compile.module.secret.tests" depends="compile.module.secret.production"
            description="compile module secret; test classes" unless="skip.tests"/>

    <target name="clean.module.secret" description="cleanup module">
        <delete dir="${secret.output.dir}"/>
        <delete dir="${secret.testoutput.dir}"/>
    </target>
</project>