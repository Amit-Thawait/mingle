<%# 
Copyright 2020 ThoughtWorks, Inc.

This program is free software: you can redistribute it and/or modify
it under the terms of the GNU Affero General Public License as
published by the Free Software Foundation, either version 3 of the
License, or (at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Affero General Public License for more details.

You should have received a copy of the GNU Affero General Public License
along with this program.  If not, see <https://www.gnu.org/licenses/agpl-3.0.txt>.
-%>
<% form_tag(MingleConfiguration.multipart_s3_import? ? "" : "https://#{MingleConfiguration.import_files_bucket_name}.s3.amazonaws.com", {:multipart => true, 'accept-charset' => 'UTF-8', :id => 'import-form'}) do -%>

  <% unless MingleConfiguration.multipart_s3_import? %>
    <%-
    @callback_url = url_for(:controller => :project_import, :action => :import_from_s3, :project_type => params[:project_type], :only_path => false)
    @policy = S3ImportPolicyDocument.new(MingleConfiguration.app_namespace, @callback_url, 2.day)
    session[:s3_import_key] = @policy.key
    -%>

    <%= hidden_field_tag("key", @policy.key) %>
    <%= hidden_field_tag("AWSAccessKeyId", @policy.access_key_id) %>
    <%= hidden_field_tag("x-amz-security-token", @policy.session_token) if @policy.session_token %>
    <%= hidden_field_tag("acl", "private") %>
    <%= hidden_field_tag("policy", @policy.encrypted_policy_document) %>
    <%= hidden_field_tag("signature", @policy.signature) %>
    <%= hidden_field_tag("Content-Type", "application/zip") %>
    <%= hidden_field_tag("success_action_redirect", @callback_url) %>
  <% end %>

  <div class="form_item">
    <label for="file">
      Exported file<span class="required">*</span>:
      <span class="notes">(this will have a '<%= import_file_extension %>' extension)</span>
    </label>
    <%= file_field_tag('file') %>
  </div>

  <div class="form_item">
    <label for="project_name">New <%= project_or_template %> name:</label>
    <%= text_field('project', 'name', :class => 'large') %>
  </div>

  <div class="form_item">
    <label for="project_identifier">New <%= project_or_template %> identifier:</label>
    <%= text_field 'project', 'identifier', :maxlength => Identifiable::IDENTIFIER_MAX_LEN, :class => 'large' %>
  </div>

  <%= render :partial => 'form_action_bar', :locals => {:action => 'Import project'}%>
<% end -%>

<%= synchronized_inputs "#project_name", "#project_identifier" %>
