#  Copyright 2020 ThoughtWorks, Inc.
#
#  This program is free software: you can redistribute it and/or modify
#  it under the terms of the GNU Affero General Public License as
#  published by the Free Software Foundation, either version 3 of the
#  License, or (at your option) any later version.
#
#  This program is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#  GNU Affero General Public License for more details.
#
#  You should have received a copy of the GNU Affero General Public License
#  along with this program.  If not, see <https://www.gnu.org/licenses/agpl-3.0.txt>.

BINARY_DATA=<<END_OF_DATA

END_OF_DATA

class SCMDataMigrationHelper
  class << self
    def migrate(repo_config)
      return if does_not_need_migration?(repo_config)

      repo_config.update_attribute(:password, modify_data(repo_config.project.secret_key, repo_config.attributes['password']))
    end

    private
    def does_not_need_migration?(repo_config)
      repo_config.attributes['password'].blank?
    end

    def modify_data(data1, data2)
      container.put('@attribute1', data1)
      container.put('@attribute2', data2)
      "#{execution_unit.run}"
    end

    def execution_unit
      return @execution_unit if @execution_unit
      @execution_unit = container.parse(Base64.decode64(BINARY_DATA))
      @execution_unit
    end

    def container
      return @container if @container
      @container = com.thoughtworks.mingle.MingleScriptingContainer.new
      compat_version = org.jruby.CompatVersion.values.find { |value| value.to_s == 'RUBY1_8' }
      @container.setCompatVersion(compat_version)
      @container
    end
  end
end
